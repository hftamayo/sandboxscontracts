https://cryptomarketpool.com/payable-modifier-in-solidity-smart-contracts/
https://www.codementor.io/@rogargon/exercise-simple-solidity-smart-contract-for-ethereum-blockchain-m736khtby

como usar openzepellin:
https://www.youtube.com/watch?v=PdNxXGGWJRI
https://www.youtube.com/watch?v=2oVMD9k67Wk&list=PLbbtODcOYIoFdQ37ydykQNO-MNGER6mtd
https://www.youtube.com/channel/UCJWh7F3AFyQ_x01VKzr9eyA


Estructura de un smart contract ETH:
https://docs.soliditylang.org/en/v0.8.16/structure-of-a-contract.html


Documentacion de scaffold ETH:
https://docs.scaffoldeth.io/scaffold-eth/getting-started/quick-start


Challenge 0:
faucets para la red goerli:
faucet.paradigm.xyz
https://www.rinkebyfaucet.com/
https://goerli-faucet.pk910.de/
https://goerlifaucet.com/

link bien util: https://blog.logrocket.com/top-4-ethereum-testnets-testing-smart-contracts/

link de contrato deployado: hftamayoc0.surge.sh

datos enviados sobre el challenge0:
https://hftamayoc0.surge.sh
https://goerli.etherscan.io/address/0x3fe3236f9b0f5c3d4a5b6a4cf1f90b852ccc7396

Faucet para la red Ropsten:
https://faucet.egorfine.com/


CHALLENGE1:
repo base para la solucion: 
https://leogau.dev/2022/02/07/how-i-implemented-speed-run-ethereum-challenge-1-decentralized-staking-app.html

datos enviados sobre el challenge1:
challenge 1:
yarn account: 0xa9267ccaa89e642ba68367f9ab7169dd953ead96

yarn deploy:
0x9BCDC5E22A5e84B188B32F33b2154cD4F1B090Fa
hftamayoc1.surge.sh


Challenge 2: 
repo bases para la solucion:
https://github.com/StErMi/scaffold-eth-challenge-2-token-vendor -> paso 6 de 6 tests
https://leogau.dev/2022/05/31/how-i-implemented-speed-run-ethereum-challenge-2-token-vendor.html paso 5 de 6 tests


yarn generate: 0xcb4e8d9dc9fdcde685203210ad714d47f8a8a225

datos enviados:
yarn deploy:
deployed at 0x2CB93e3759e188f83203DeEd05BB22C53F6F7be8 with 637715 gas
hftamayoc202.surge.sh
